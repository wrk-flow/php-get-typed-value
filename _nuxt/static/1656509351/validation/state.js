window.__NUXT__=(function(a,b,c,d,e,f,g,h){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1656509351",layout:"default",error:c,state:{categories:{en:{"":[{slug:"index",title:"Introduction",to:d,category:a},{slug:"validation",title:"Validation",to:e,category:a},{slug:"transformers",title:"Transformers",to:"\u002Ftransformers",category:a}],Customization:[{slug:"custom-data-holder",title:"Custom data holder",category:f,to:"\u002Fcustomization\u002Fcustom-data-holder"},{slug:"custom-exceptions",title:"Custom exceptions",category:f,to:"\u002Fcustomization\u002Fcustom-exceptions"}],Community:[{slug:"releases",title:"Releases",category:"Community",to:"\u002Freleases"}]}},releases:[{name:"v0.4.0",date:"2022-06-29T09:46:32Z",body:"\u003Cp\u003EðŸš€ Add array item transformer that has wrapped array value in GetValue instance. \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fphp-get-typed-value.wrk-flow.com\u002Ftransformers\u002F#arrayitemgettertransformer\"\u003EDocumentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-php\"\u003E$transformer = new ArrayItemGetterTransformer( function (\\Wrkflow\\GetValue\\GetValue $value, string $key): string {\n    return [\n        self::KeyValue =&gt; $value-&gt;getRequiredString(self::KeyValue),\n    ];\n});\n\n$values = $getValue-&gt;getArray(&#39;key&#39;, [$transformer]);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EðŸ›  \u003Ccode\u003E$getValue-&gt;makeInstance\u003C\u002Fcode\u003E will allow you to create new instance of GetValue with same strategy\u002Fbuilder\u002Factions.\u003C\u002Fp\u003E\n\u003Ch2 id=\"breaking-changes\"\u003EBreaking changes\u003C\u002Fh2\u003E\n\u003Ch3 id=\"critical\"\u003ECritical\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003ERenamed \u003Ccode\u003EClosureArrayItemsTransformer\u003C\u002Fcode\u003E to \u003Ccode\u003EArrayItemTransformer\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ERenamed \u003Ccode\u003EClosureArrayTransformer\u003C\u002Fcode\u003E to \u003Ccode\u003EArrayTransformer\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3 id=\"minor\"\u003EMinor\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003ETransformers \u003Ccode\u003Etransform\u003C\u002Fcode\u003E method has new parameter \u003Ccode\u003EGetValue $getValue\u003C\u002Fcode\u003E - update your transformers or transform calls.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-php\"\u003Epublic function transform(mixed $value, string $key, GetValue $getValue): mixed\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"},{name:"v0.3.1",date:"2022-06-28T16:32:00Z",body:"\u003Cp\u003EðŸš€ Array closures transformers \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fphp-get-typed-value.wrk-flow.com\u002Ftransformers\u002F#closurearraytransformer\"\u003EDocumentation\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n"},{name:"v0.3.0",date:"2022-06-28T15:22:18Z",body:"\u003Cp\u003EðŸš€ Add ability to transform value before (most transforms) and after validation (mostly your custom transformations).\u003C\u002Fp\u003E\n\u003Ch2 id=\"breaking-change\"\u003EBreaking change\u003C\u002Fh2\u003E\n\u003Cp\u003EBy my opinion I&#39;ve implemented default strategy based on my usage on all projects:\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003Estring\u003C\u002Fstrong\u003E -&gt; string is always trimmed and if it is empty then it will be transformed to null\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003Ebool\u003C\u002Fstrong\u003E -&gt; Converts most used representations of boolean in string or number (&#39;yes&#39;,&#39;no&#39;,1,0,&#39;1&#39;,&#39;0&#39;,&#39;true&#39;,&#39;false&#39;) and converts it to bool.\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003EAlso, if you are not using named arguments you need to update:\u003C\u002Fp\u003E\n\u003Ch3 id=\"getvalue__construct\"\u003E\u003Ccode\u003EGetValue::__construct\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003Enew argument\u003C\u002Fstrong\u003E $transformerStrategy. This will be mostly used for tweaking.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E$getValidatedValueAction\u003C\u002Fcode\u003E was moved as last argument. Probably will not be used.\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003E$exceptionBuilder\u003C\u002Fcode\u003EÂ - was moved before \u003Ccode\u003E$getValidatedValueAction\u003C\u002Fcode\u003E \u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-php\"\u003E public function __construct(\n        public readonly AbstractData $data,\n        public readonly TransformerStrategy $transformerStrategy = new DefaultTransformerStrategy(),\n        public readonly ExceptionBuilderContract $exceptionBuilder = new ExceptionBuilder(),\n        GetValidatedValueAction $getValidatedValueAction = null,\n    );\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"},{name:"v0.2.1",date:"2022-06-28T12:35:09Z",body:"\u003Cp\u003Eâ›‘ Made \u003Ccode\u003EgetArrayGetter\u003C\u002Fcode\u003E match \u003Ccode\u003EgetArray\u003C\u002Fcode\u003E (returns always array instance) and add \u003Ccode\u003EgetNullableArrayGetter\u003C\u002Fcode\u003E to return null if data is missing or empty.\u003C\u002Fp\u003E\n\u003Ch2 id=\"breaking-change\"\u003EBreaking change\u003C\u002Fh2\u003E\n\u003Cp\u003EðŸ›  \u003Ccode\u003EgetArrayGetter\u003C\u002Fcode\u003E does not return null any more. Use \u003Ccode\u003EgetNullableArrayGetter\u003C\u002Fcode\u003E instead to get null if data is missing.\u003C\u002Fp\u003E\n"},{name:"v0.2.0",date:"2022-06-28T10:57:44Z",body:"\u003Cp\u003EðŸš€ Add ability to get validated value (use \u003Ccode\u003Erules: []\u003C\u002Fcode\u003E in methods). \u003Ca target=\"_blank\" href=\"https:\u002F\u002Fphp-get-typed-value.wrk-flow.com\u002Fvalidation\"\u003EDocumentation\u003C\u002Fa\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003Eâ›‘ \u003Ccode\u003Eint|string|float|bool|string\u003C\u002Fcode\u003E is now validated and throws \u003Ccode\u003E\\Wrkflow\\GetValue\\Exceptions\\ValidationFailedException\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Ch2 id=\"breaking-change\"\u003EBreaking change\u003C\u002Fh2\u003E\n\u003Cp\u003EðŸ›  If you are extending exception builder then you need to implement new method\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"language-php\"\u003E\u002F**\n * @param class-string&lt;RuleContract&gt; $ruleClassName\n *\u002F\npublic function validationFailed(string $key, string $ruleClassName): Exception;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n"},{name:"v0.1.0",date:"2022-06-27T16:47:47Z",body:"\u003Cp\u003EðŸš€ Initial release\u003C\u002Fp\u003E\n"}],settings:{title:"PHP Get typed value",url:"https:\u002F\u002Fphp-get-typed-value.wrk-flow.com",defaultDir:"docs",defaultBranch:"main",filled:b,github:"wrk-flow\u002Fphp-get-typed-value",twitter:"pionl",category:a},menu:{open:g},i18n:{routeParams:{}}},serverRendered:b,routePath:e,config:{_app:{basePath:d,assetsPath:"\u002F_nuxt\u002F",cdnURL:c},content:{dbHash:"ed8eb737"}},__i18n:{langs:{}},colorMode:{preference:h,value:h,unknown:b,forced:g}}}("",true,null,"\u002F","\u002Fvalidation","Customization",false,"system"));